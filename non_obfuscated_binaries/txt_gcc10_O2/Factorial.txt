
/app/bin_gcc10_O2/factorial:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <__stack_chk_fail@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <__printf_chk@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__printf_chk@GLIBC_2.3.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <main>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	41 54                	push   %r12
    10a6:	48 8d 35 5b 0f 00 00 	lea    0xf5b(%rip),%rsi        # 2008 <_IO_stdin_used+0x8>
    10ad:	bf 01 00 00 00       	mov    $0x1,%edi
    10b2:	55                   	push   %rbp
    10b3:	53                   	push   %rbx
    10b4:	48 81 ec 40 03 00 00 	sub    $0x340,%rsp
    10bb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    10c2:	00 00 
    10c4:	48 89 84 24 38 03 00 	mov    %rax,0x338(%rsp)
    10cb:	00 
    10cc:	31 c0                	xor    %eax,%eax
    10ce:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    10d5:	00 
    10d6:	e8 a5 ff ff ff       	callq  1080 <__printf_chk@plt>
    10db:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    10e0:	48 8d 3d 83 0f 00 00 	lea    0xf83(%rip),%rdi        # 206a <_IO_stdin_used+0x6a>
    10e7:	31 c0                	xor    %eax,%eax
    10e9:	e8 a2 ff ff ff       	callq  1090 <__isoc99_scanf@plt>
    10ee:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    10f2:	85 f6                	test   %esi,%esi
    10f4:	0f 88 1a 01 00 00    	js     1214 <main+0x174>
    10fa:	83 fe 01             	cmp    $0x1,%esi
    10fd:	0f 8e 26 01 00 00    	jle    1229 <main+0x189>
    1103:	45 31 c0             	xor    %r8d,%r8d
    1106:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    110b:	4c 8d 4c 24 14       	lea    0x14(%rsp),%r9
    1110:	31 db                	xor    %ebx,%ebx
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	4d 8d 1c 99          	lea    (%r9,%rbx,4),%r11
    111c:	48 89 f9             	mov    %rdi,%rcx
    111f:	31 c0                	xor    %eax,%eax
    1121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1128:	8b 11                	mov    (%rcx),%edx
    112a:	48 83 c1 04          	add    $0x4,%rcx
    112e:	0f af d6             	imul   %esi,%edx
    1131:	01 c2                	add    %eax,%edx
    1133:	48 63 c2             	movslq %edx,%rax
    1136:	41 89 d2             	mov    %edx,%r10d
    1139:	89 d5                	mov    %edx,%ebp
    113b:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
    1142:	41 c1 fa 1f          	sar    $0x1f,%r10d
    1146:	48 c1 f8 22          	sar    $0x22,%rax
    114a:	44 29 d0             	sub    %r10d,%eax
    114d:	44 8d 14 80          	lea    (%rax,%rax,4),%r10d
    1151:	45 01 d2             	add    %r10d,%r10d
    1154:	44 29 d5             	sub    %r10d,%ebp
    1157:	89 69 fc             	mov    %ebp,-0x4(%rcx)
    115a:	4c 39 d9             	cmp    %r11,%rcx
    115d:	75 c9                	jne    1128 <main+0x88>
    115f:	83 fa 09             	cmp    $0x9,%edx
    1162:	7e 4a                	jle    11ae <main+0x10e>
    1164:	41 8d 48 01          	lea    0x1(%r8),%ecx
    1168:	48 63 c9             	movslq %ecx,%rcx
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1170:	48 63 d0             	movslq %eax,%rdx
    1173:	41 89 c2             	mov    %eax,%r10d
    1176:	41 89 c3             	mov    %eax,%r11d
    1179:	41 89 c8             	mov    %ecx,%r8d
    117c:	48 69 d2 67 66 66 66 	imul   $0x66666667,%rdx,%rdx
    1183:	41 c1 fa 1f          	sar    $0x1f,%r10d
    1187:	48 c1 fa 22          	sar    $0x22,%rdx
    118b:	44 29 d2             	sub    %r10d,%edx
    118e:	44 8d 14 92          	lea    (%rdx,%rdx,4),%r10d
    1192:	45 01 d2             	add    %r10d,%r10d
    1195:	45 29 d3             	sub    %r10d,%r11d
    1198:	41 89 c2             	mov    %eax,%r10d
    119b:	89 d0                	mov    %edx,%eax
    119d:	44 89 1c 8f          	mov    %r11d,(%rdi,%rcx,4)
    11a1:	48 83 c1 01          	add    $0x1,%rcx
    11a5:	41 83 fa 09          	cmp    $0x9,%r10d
    11a9:	7f c5                	jg     1170 <main+0xd0>
    11ab:	49 63 d8             	movslq %r8d,%rbx
    11ae:	83 ee 01             	sub    $0x1,%esi
    11b1:	83 fe 01             	cmp    $0x1,%esi
    11b4:	0f 85 5e ff ff ff    	jne    1118 <main+0x78>
    11ba:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    11c1:	00 
    11c2:	48 8d 2c 9f          	lea    (%rdi,%rbx,4),%rbp
    11c6:	4c 8d 25 9d 0e 00 00 	lea    0xe9d(%rip),%r12        # 206a <_IO_stdin_used+0x6a>
    11cd:	48 8d 5f fc          	lea    -0x4(%rdi),%rbx
    11d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11d8:	8b 55 00             	mov    0x0(%rbp),%edx
    11db:	4c 89 e6             	mov    %r12,%rsi
    11de:	bf 01 00 00 00       	mov    $0x1,%edi
    11e3:	31 c0                	xor    %eax,%eax
    11e5:	48 83 ed 04          	sub    $0x4,%rbp
    11e9:	e8 92 fe ff ff       	callq  1080 <__printf_chk@plt>
    11ee:	48 39 dd             	cmp    %rbx,%rbp
    11f1:	75 e5                	jne    11d8 <main+0x138>
    11f3:	48 8b 84 24 38 03 00 	mov    0x338(%rsp),%rax
    11fa:	00 
    11fb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1202:	00 00 
    1204:	75 3d                	jne    1243 <main+0x1a3>
    1206:	48 81 c4 40 03 00 00 	add    $0x340,%rsp
    120d:	31 c0                	xor    %eax,%eax
    120f:	5b                   	pop    %rbx
    1210:	5d                   	pop    %rbp
    1211:	41 5c                	pop    %r12
    1213:	c3                   	retq   
    1214:	48 8d 35 1d 0e 00 00 	lea    0xe1d(%rip),%rsi        # 2038 <_IO_stdin_used+0x38>
    121b:	bf 01 00 00 00       	mov    $0x1,%edi
    1220:	31 c0                	xor    %eax,%eax
    1222:	e8 59 fe ff ff       	callq  1080 <__printf_chk@plt>
    1227:	eb ca                	jmp    11f3 <main+0x153>
    1229:	ba 01 00 00 00       	mov    $0x1,%edx
    122e:	48 8d 35 35 0e 00 00 	lea    0xe35(%rip),%rsi        # 206a <_IO_stdin_used+0x6a>
    1235:	bf 01 00 00 00       	mov    $0x1,%edi
    123a:	31 c0                	xor    %eax,%eax
    123c:	e8 3f fe ff ff       	callq  1080 <__printf_chk@plt>
    1241:	eb b0                	jmp    11f3 <main+0x153>
    1243:	e8 28 fe ff ff       	callq  1070 <__stack_chk_fail@plt>
    1248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    124f:	00 

0000000000001250 <_start>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	31 ed                	xor    %ebp,%ebp
    1256:	49 89 d1             	mov    %rdx,%r9
    1259:	5e                   	pop    %rsi
    125a:	48 89 e2             	mov    %rsp,%rdx
    125d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1261:	50                   	push   %rax
    1262:	54                   	push   %rsp
    1263:	4c 8d 05 46 01 00 00 	lea    0x146(%rip),%r8        # 13b0 <__libc_csu_fini>
    126a:	48 8d 0d cf 00 00 00 	lea    0xcf(%rip),%rcx        # 1340 <__libc_csu_init>
    1271:	48 8d 3d 28 fe ff ff 	lea    -0x1d8(%rip),%rdi        # 10a0 <main>
    1278:	ff 15 62 2d 00 00    	callq  *0x2d62(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    127e:	f4                   	hlt    
    127f:	90                   	nop

0000000000001280 <deregister_tm_clones>:
    1280:	48 8d 3d 89 2d 00 00 	lea    0x2d89(%rip),%rdi        # 4010 <__TMC_END__>
    1287:	48 8d 05 82 2d 00 00 	lea    0x2d82(%rip),%rax        # 4010 <__TMC_END__>
    128e:	48 39 f8             	cmp    %rdi,%rax
    1291:	74 15                	je     12a8 <deregister_tm_clones+0x28>
    1293:	48 8b 05 3e 2d 00 00 	mov    0x2d3e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    129a:	48 85 c0             	test   %rax,%rax
    129d:	74 09                	je     12a8 <deregister_tm_clones+0x28>
    129f:	ff e0                	jmpq   *%rax
    12a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12a8:	c3                   	retq   
    12a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012b0 <register_tm_clones>:
    12b0:	48 8d 3d 59 2d 00 00 	lea    0x2d59(%rip),%rdi        # 4010 <__TMC_END__>
    12b7:	48 8d 35 52 2d 00 00 	lea    0x2d52(%rip),%rsi        # 4010 <__TMC_END__>
    12be:	48 29 fe             	sub    %rdi,%rsi
    12c1:	48 89 f0             	mov    %rsi,%rax
    12c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    12c8:	48 c1 f8 03          	sar    $0x3,%rax
    12cc:	48 01 c6             	add    %rax,%rsi
    12cf:	48 d1 fe             	sar    %rsi
    12d2:	74 14                	je     12e8 <register_tm_clones+0x38>
    12d4:	48 8b 05 15 2d 00 00 	mov    0x2d15(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    12db:	48 85 c0             	test   %rax,%rax
    12de:	74 08                	je     12e8 <register_tm_clones+0x38>
    12e0:	ff e0                	jmpq   *%rax
    12e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12e8:	c3                   	retq   
    12e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012f0 <__do_global_dtors_aux>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	80 3d 15 2d 00 00 00 	cmpb   $0x0,0x2d15(%rip)        # 4010 <__TMC_END__>
    12fb:	75 2b                	jne    1328 <__do_global_dtors_aux+0x38>
    12fd:	55                   	push   %rbp
    12fe:	48 83 3d f2 2c 00 00 	cmpq   $0x0,0x2cf2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1305:	00 
    1306:	48 89 e5             	mov    %rsp,%rbp
    1309:	74 0c                	je     1317 <__do_global_dtors_aux+0x27>
    130b:	48 8b 3d f6 2c 00 00 	mov    0x2cf6(%rip),%rdi        # 4008 <__dso_handle>
    1312:	e8 49 fd ff ff       	callq  1060 <__cxa_finalize@plt>
    1317:	e8 64 ff ff ff       	callq  1280 <deregister_tm_clones>
    131c:	c6 05 ed 2c 00 00 01 	movb   $0x1,0x2ced(%rip)        # 4010 <__TMC_END__>
    1323:	5d                   	pop    %rbp
    1324:	c3                   	retq   
    1325:	0f 1f 00             	nopl   (%rax)
    1328:	c3                   	retq   
    1329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001330 <frame_dummy>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	e9 77 ff ff ff       	jmpq   12b0 <register_tm_clones>
    1339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001340 <__libc_csu_init>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	41 57                	push   %r15
    1346:	4c 8d 3d 5b 2a 00 00 	lea    0x2a5b(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    134d:	41 56                	push   %r14
    134f:	49 89 d6             	mov    %rdx,%r14
    1352:	41 55                	push   %r13
    1354:	49 89 f5             	mov    %rsi,%r13
    1357:	41 54                	push   %r12
    1359:	41 89 fc             	mov    %edi,%r12d
    135c:	55                   	push   %rbp
    135d:	48 8d 2d 4c 2a 00 00 	lea    0x2a4c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1364:	53                   	push   %rbx
    1365:	4c 29 fd             	sub    %r15,%rbp
    1368:	48 83 ec 08          	sub    $0x8,%rsp
    136c:	e8 8f fc ff ff       	callq  1000 <_init>
    1371:	48 c1 fd 03          	sar    $0x3,%rbp
    1375:	74 1f                	je     1396 <__libc_csu_init+0x56>
    1377:	31 db                	xor    %ebx,%ebx
    1379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1380:	4c 89 f2             	mov    %r14,%rdx
    1383:	4c 89 ee             	mov    %r13,%rsi
    1386:	44 89 e7             	mov    %r12d,%edi
    1389:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    138d:	48 83 c3 01          	add    $0x1,%rbx
    1391:	48 39 dd             	cmp    %rbx,%rbp
    1394:	75 ea                	jne    1380 <__libc_csu_init+0x40>
    1396:	48 83 c4 08          	add    $0x8,%rsp
    139a:	5b                   	pop    %rbx
    139b:	5d                   	pop    %rbp
    139c:	41 5c                	pop    %r12
    139e:	41 5d                	pop    %r13
    13a0:	41 5e                	pop    %r14
    13a2:	41 5f                	pop    %r15
    13a4:	c3                   	retq   
    13a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    13ac:	00 00 00 00 

00000000000013b0 <__libc_csu_fini>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	c3                   	retq   

Disassembly of section .fini:

00000000000013b8 <_fini>:
    13b8:	f3 0f 1e fa          	endbr64 
    13bc:	48 83 ec 08          	sub    $0x8,%rsp
    13c0:	48 83 c4 08          	add    $0x8,%rsp
    13c4:	c3                   	retq   
