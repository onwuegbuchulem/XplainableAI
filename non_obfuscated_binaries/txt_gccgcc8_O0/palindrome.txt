
/app/bin_gccgcc8_O0/Palindrome:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	pushq  0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmpq *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmpq *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <strlen@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmpq *0x2f2d(%rip)        # 3fb8 <strlen@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__stack_chk_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmpq *0x2f25(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <printf@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmpq *0x2f1d(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <__isoc99_scanf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 06 03 00 00 	lea    0x306(%rip),%r8        # 13e0 <__libc_csu_fini>
    10da:	48 8d 0d 8f 02 00 00 	lea    0x28f(%rip),%rcx        # 1370 <__libc_csu_init>
    10e1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 11a9 <main>
    10e8:	ff 15 f2 2e 00 00    	callq  *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 21 2f 00 00 	lea    0x2f21(%rip),%rdi        # 4018 <__TMC_END__>
    10f7:	48 8d 05 1a 2f 00 00 	lea    0x2f1a(%rip),%rax        # 4018 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d f1 2e 00 00 	lea    0x2ef1(%rip),%rdi        # 4018 <__TMC_END__>
    1127:	48 8d 35 ea 2e 00 00 	lea    0x2eea(%rip),%rsi        # 4018 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d ad 2e 00 00 00 	cmpb   $0x0,0x2ead(%rip)        # 4018 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	callq  1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	callq  10f0 <deregister_tm_clones>
    118c:	c6 05 85 2e 00 00 01 	movb   $0x1,0x2e85(%rip)        # 4018 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	retq   
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	53                   	push   %rbx
    11b2:	48 83 ec 38          	sub    $0x38,%rsp
    11b6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11bd:	00 00 
    11bf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    11c3:	31 c0                	xor    %eax,%eax
    11c5:	48 89 e0             	mov    %rsp,%rax
    11c8:	48 89 c3             	mov    %rax,%rbx
    11cb:	48 8b 05 3e 2e 00 00 	mov    0x2e3e(%rip),%rax        # 4010 <max>
    11d2:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    11d6:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    11da:	48 89 c2             	mov    %rax,%rdx
    11dd:	49 89 d0             	mov    %rdx,%r8
    11e0:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    11e6:	48 89 c2             	mov    %rax,%rdx
    11e9:	48 89 d6             	mov    %rdx,%rsi
    11ec:	bf 00 00 00 00       	mov    $0x0,%edi
    11f1:	48 89 c2             	mov    %rax,%rdx
    11f4:	b8 10 00 00 00       	mov    $0x10,%eax
    11f9:	48 83 e8 01          	sub    $0x1,%rax
    11fd:	48 01 d0             	add    %rdx,%rax
    1200:	be 10 00 00 00       	mov    $0x10,%esi
    1205:	ba 00 00 00 00       	mov    $0x0,%edx
    120a:	48 f7 f6             	div    %rsi
    120d:	48 6b c0 10          	imul   $0x10,%rax,%rax
    1211:	48 89 c1             	mov    %rax,%rcx
    1214:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    121b:	48 89 e2             	mov    %rsp,%rdx
    121e:	48 29 ca             	sub    %rcx,%rdx
    1221:	48 39 d4             	cmp    %rdx,%rsp
    1224:	74 12                	je     1238 <main+0x8f>
    1226:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    122d:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1234:	00 00 
    1236:	eb e9                	jmp    1221 <main+0x78>
    1238:	48 89 c2             	mov    %rax,%rdx
    123b:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1241:	48 29 d4             	sub    %rdx,%rsp
    1244:	48 89 c2             	mov    %rax,%rdx
    1247:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    124d:	48 85 d2             	test   %rdx,%rdx
    1250:	74 10                	je     1262 <main+0xb9>
    1252:	25 ff 0f 00 00       	and    $0xfff,%eax
    1257:	48 83 e8 08          	sub    $0x8,%rax
    125b:	48 01 e0             	add    %rsp,%rax
    125e:	48 83 08 00          	orq    $0x0,(%rax)
    1262:	48 89 e0             	mov    %rsp,%rax
    1265:	48 83 c0 00          	add    $0x0,%rax
    1269:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    126d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    1274:	00 
    1275:	48 8d 3d 8c 0d 00 00 	lea    0xd8c(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    127c:	b8 00 00 00 00       	mov    $0x0,%eax
    1281:	e8 1a fe ff ff       	callq  10a0 <printf@plt>
    1286:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    128a:	48 89 c6             	mov    %rax,%rsi
    128d:	48 8d 3d 85 0d 00 00 	lea    0xd85(%rip),%rdi        # 2019 <_IO_stdin_used+0x19>
    1294:	b8 00 00 00 00       	mov    $0x0,%eax
    1299:	e8 12 fe ff ff       	callq  10b0 <__isoc99_scanf@plt>
    129e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12a2:	48 89 c7             	mov    %rax,%rdi
    12a5:	e8 d6 fd ff ff       	callq  1080 <strlen@plt>
    12aa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    12ae:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    12b5:	00 
    12b6:	eb 30                	jmp    12e8 <main+0x13f>
    12b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    12bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    12c0:	48 01 d0             	add    %rdx,%rax
    12c3:	0f b6 10             	movzbl (%rax),%edx
    12c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12ca:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    12ce:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    12d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12d6:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    12da:	38 c2                	cmp    %al,%dl
    12dc:	75 05                	jne    12e3 <main+0x13a>
    12de:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    12e3:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
    12e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12ec:	48 89 c2             	mov    %rax,%rdx
    12ef:	48 c1 ea 3f          	shr    $0x3f,%rdx
    12f3:	48 01 d0             	add    %rdx,%rax
    12f6:	48 d1 f8             	sar    %rax
    12f9:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    12fd:	7c b9                	jl     12b8 <main+0x10f>
    12ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1303:	48 89 c2             	mov    %rax,%rdx
    1306:	48 c1 ea 3f          	shr    $0x3f,%rdx
    130a:	48 01 d0             	add    %rdx,%rax
    130d:	48 d1 f8             	sar    %rax
    1310:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    1314:	75 1a                	jne    1330 <main+0x187>
    1316:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    131a:	48 89 c6             	mov    %rax,%rsi
    131d:	48 8d 3d fc 0c 00 00 	lea    0xcfc(%rip),%rdi        # 2020 <_IO_stdin_used+0x20>
    1324:	b8 00 00 00 00       	mov    $0x0,%eax
    1329:	e8 72 fd ff ff       	callq  10a0 <printf@plt>
    132e:	eb 18                	jmp    1348 <main+0x19f>
    1330:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1334:	48 89 c6             	mov    %rax,%rsi
    1337:	48 8d 3d 0a 0d 00 00 	lea    0xd0a(%rip),%rdi        # 2048 <_IO_stdin_used+0x48>
    133e:	b8 00 00 00 00       	mov    $0x0,%eax
    1343:	e8 58 fd ff ff       	callq  10a0 <printf@plt>
    1348:	b8 00 00 00 00       	mov    $0x0,%eax
    134d:	48 89 dc             	mov    %rbx,%rsp
    1350:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    1354:	64 48 2b 1c 25 28 00 	sub    %fs:0x28,%rbx
    135b:	00 00 
    135d:	74 05                	je     1364 <main+0x1bb>
    135f:	e8 2c fd ff ff       	callq  1090 <__stack_chk_fail@plt>
    1364:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1368:	c9                   	leaveq 
    1369:	c3                   	retq   
    136a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001370 <__libc_csu_init>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	41 57                	push   %r15
    1376:	4c 8d 3d 23 2a 00 00 	lea    0x2a23(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    137d:	41 56                	push   %r14
    137f:	49 89 d6             	mov    %rdx,%r14
    1382:	41 55                	push   %r13
    1384:	49 89 f5             	mov    %rsi,%r13
    1387:	41 54                	push   %r12
    1389:	41 89 fc             	mov    %edi,%r12d
    138c:	55                   	push   %rbp
    138d:	48 8d 2d 14 2a 00 00 	lea    0x2a14(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    1394:	53                   	push   %rbx
    1395:	4c 29 fd             	sub    %r15,%rbp
    1398:	48 83 ec 08          	sub    $0x8,%rsp
    139c:	e8 5f fc ff ff       	callq  1000 <_init>
    13a1:	48 c1 fd 03          	sar    $0x3,%rbp
    13a5:	74 1f                	je     13c6 <__libc_csu_init+0x56>
    13a7:	31 db                	xor    %ebx,%ebx
    13a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13b0:	4c 89 f2             	mov    %r14,%rdx
    13b3:	4c 89 ee             	mov    %r13,%rsi
    13b6:	44 89 e7             	mov    %r12d,%edi
    13b9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    13bd:	48 83 c3 01          	add    $0x1,%rbx
    13c1:	48 39 dd             	cmp    %rbx,%rbp
    13c4:	75 ea                	jne    13b0 <__libc_csu_init+0x40>
    13c6:	48 83 c4 08          	add    $0x8,%rsp
    13ca:	5b                   	pop    %rbx
    13cb:	5d                   	pop    %rbp
    13cc:	41 5c                	pop    %r12
    13ce:	41 5d                	pop    %r13
    13d0:	41 5e                	pop    %r14
    13d2:	41 5f                	pop    %r15
    13d4:	c3                   	retq   
    13d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    13dc:	00 00 00 00 

00000000000013e0 <__libc_csu_fini>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	c3                   	retq   

Disassembly of section .fini:

00000000000013e8 <_fini>:
    13e8:	f3 0f 1e fa          	endbr64 
    13ec:	48 83 ec 08          	sub    $0x8,%rsp
    13f0:	48 83 c4 08          	add    $0x8,%rsp
    13f4:	c3                   	retq   
